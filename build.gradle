
buildscript {
   repositories {
      jcenter()
   }
}

plugins {
    id 'me.champeau.gradle.jmh' version '0.4.5'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'me.champeau.gradle.jmh'

defaultTasks 'build'

group = 'org.pcollections'
version = '3.2.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

description = """PCollections"""

repositories {
     jcenter()
}

dependencies {
    // Use JUnit 5: JUnit Jupiter + JUnit Vintage [for running JUnit 3/4 tests as well]
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testCompile 'org.junit.vintage:junit-vintage-engine:5.1.0'
    testCompile 'org.assertj:assertj-core:3.9.1'
}

test {
    useJUnitPlatform() // Use JUnit 5
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

task copyJavadocDocFiles(type: Copy) {
    from('src/main/java')
    into 'build/docs/javadoc'
    include '**/doc-files/*.*'
}

javadoc {
    dependsOn copyJavadocDocFiles // https://github.com/gradle/gradle/issues/4046
    options.addBooleanOption('Xdoclint:none', true) // https://github.com/hrldcpr/pcollections/issues/62
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'PCollections'
        packaging 'jar'
        artifactId 'pcollections'
        description 'A Persistent Java Collections Library'
        url 'https://github.com/hrldcpr/pcollections'

        scm {
          connection 'scm:git:git://github.com/hrldcpr/pcollections.git'
          developerConnection 'scm:git:ssh://github.com:hrldcpr/pcollections.git'
          url 'https://github.com/hrldcpr/pcollections'
        }

        licenses {
          license {
            name 'The MIT License'
            url 'https://opensource.org/licenses/mit-license.php'
          }
        }

        developers {
          developer {
            id 'hrldcpr'
            name 'Harold Cooper'
            email 'hrldcpr@gmail.com'
          }
        }
      }
    }
  }
}
